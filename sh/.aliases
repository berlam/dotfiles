# interactive shell only
[ -z "$PS1" ] && return

# set aliases
alias o=mimeopen

alias history='fc -l 1'
alias l='ls -lah'
alias la='ls -lAh'
alias ll='ls -lh'
alias ls='ls --color=tty'
alias lsa='ls -lah'
alias po=popd
alias pu=pushd
alias rd=rmdir

# git wrapper to set the author for commits per repo automatically
# add [user "$SERVICE_NAME"] to the .gitconfig
_git_wrapper() {
	GIT_PATH=`which -a git | sed -n 2p`
	if [ `"$GIT_PATH" rev-parse --is-inside-work-tree` ]; then
		local GIT_USERNAME
		local GIT_EMAIL
		while read SERVICE; do
			if "$GIT_PATH" remote -v | grep -xq "^origin\b.*$SERVICE.*(push)$"; then
				GIT_USERNAME="`\"$GIT_PATH\" config \"user.$SERVICE.name\"`"
				GIT_EMAIL="`\"$GIT_PATH\" config \"user.$SERVICE.email\"`"
				break
			fi
		done < <("$GIT_PATH" config -l | egrep "^user\.\w+(\.\w+)?\.(name|email)=.*$" | sed -E "s/^user\.(\w+(\.\w+)?)\..*$/\1/")
		GIT_USERNAME="${GIT_USERNAME:-`\"$GIT_PATH\" config --global user.name`}"
		GIT_EMAIL="${GIT_EMAIL:-`\"$GIT_PATH\" config --global user.email`}"
		if [ -n "$GIT_USERNAME" ] && [ "$GIT_USERNAME" != "`\"$GIT_PATH\" config user.name`" ]; then
			"$GIT_PATH" config --replace-all user.name "$GIT_USERNAME"
		fi
		if [ -n "$GIT_EMAIL" ] && [ "$GIT_EMAIL" != "`\"$GIT_PATH\" config user.email`" ]; then
			"$GIT_PATH" config --replace-all user.email "$GIT_EMAIL"
		fi
	fi
	"$GIT_PATH" "$@"
}
alias git='_git_wrapper'

# stow wrapper
_stow_wrapper() {
	STOW_METHOD="$1"
	shift
	for REPO in pub prv; do
		REPO_PATH="$HOME/.setup/$REPO"
		for PACKAGE in "$@"; do
			[ -d "$REPO_PATH/$PACKAGE" ] && stow -v "$STOW_METHOD" -d "$REPO_PATH" -t "$HOME" --no-folding "$PACKAGE"
		done
	done
}
restow() {
	_stow_wrapper -R "$@"
}
unstow() {
	_stow_wrapper -D "$@"
}

# purge helper
purge() {
	case "$@" in
		apt|dpkg)
			sudo apt-get --purge autoremove
			sudo dpkg --purge `dpkg --get-selections | grep deinstall | cut -f1`
		;;
		git)
			git reset --hard
		;;
		svn)
			if [ $(command -v cygpath >/dev/null) ]; then
				svn status --no-ignore | grep "^[?I]" | sed -r "s/^[?I]\s+//" | xargs --null cygpath -u -p | xargs -I{} rm -rf "{}"
			else
				svn status --no-ignore | grep "^[?I]" | sed -r "s/^[?I]\s+//" | xargs -I{} rm -rf "{}"
			fi
		;;
		docker)
			docker stop `docker ps -a -q`
			docker rm `docker ps -a -q`
			docker rmi `docker images -a -q`
			docker volume rm `docker volume ls -qf dangling=true`
		;;
	esac
}
